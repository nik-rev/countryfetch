# injects `rustfmt` formatter into code blocks in doc comments
format_code_in_doc_comments = true
# when blocky items are the last argument to a function, they can overflow
overflow_delimited_expr = true
# `Foo { x: x }` => `Foo { x }`
use_field_init_shorthand = true
# `let (a, _, _) = ...` => `let (a, ..) => ...`
condense_wildcard_suffixes = true
# breaks up long string literals over several lines
format_strings = true
# This is the most merge-conflict-friendly option to organize imports
# each `use` imports a single item
imports_granularity = "Item"
# converts `/* */` to `//`
normalize_comments = true
# converts `#[doc]` to `///`
normalize_doc_attributes = true
# use `0xdeadbeef` and not `0xDEADBEEF`
hex_literal_case = "Lower"
# Force multiline closure and match arm bodies to be wrapped in a block
# 
# This makes it MUCH easier to then add more statements in the closure/match arm
force_multiline_blocks = true
# Comments longer than 80 characters are wrapped to the next line
wrap_comments = true
# always format struct, and enum variant with named fields
# into multiple lines - makes refactoring easier
struct_variant_width = 0
# like above, but with literals
struct_lit_width = 0
